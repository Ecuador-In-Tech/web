---
import commonQuestions from "../assets/common-questions.json";
import Accordion from "./Accordion.astro";
---
<!-- 

Father component: Alpine.js logic

1. The global store `faqs` manages the `activeId` state, which represents the ID of the last accordion opened by the user.
2. Each child component observes the `activeId` state using the store's  `isVisible` function.
3. When the user clicks a child component, the store's `activeId` is updated, and this change automatically propagates to all children.
4. Every child checks if the new active ID matches its own, and opens or closes accordingly.

This ensures that only one accordion is open at a time.

-->
<section class="py-16 bg-white">
  <div class="container mx-auto px-4">
    <h2 class="text-3xl font-bold text-center mb-12">Preguntas frecuentes</h2>
    <div
      class="container faqs-container "
    >
      {
        commonQuestions.map((question, index) => (
          <Accordion
            {...question}
            id={++index}
            last={commonQuestions.length}
          />
        ))
      }
    </div>
  </div>
</section>

<!-- Client side rendering -->
<script>
  import Alpine from "alpinejs";
  
  interface FaqStore {
    activeId: number | null;
    setActiveId(id: number | null): void;
    isVisible(id:number | null): boolean
  }

  Alpine.store('faqs', {
    activeId: null,

    setActiveId(id:number | null) {
      this.activeId = id;
    },

    isVisible(id:number) {
      return this.activeId === id;
    },

  } as FaqStore)

  Alpine.start()
</script>