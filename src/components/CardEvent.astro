---
import type { Event } from "../interfaces/events";
import CardBase from "./CardBase.astro";

const { id, title, description, date, place, modality, image, attendees } =
	Astro.props as Event;

const eventHeaderProps = { id, title, image, modality, description };
const justDate = date.split("T");
const formattedDate = new Date(date).toLocaleDateString("es-EC", {
	weekday: "long",
	year: "numeric",
	month: "long",
	day: "numeric",
});
---

<CardBase {...eventHeaderProps}>
    <div 
        class="space-y-2 text-sm text-gray-500"
        itemscope 
        itemtype="http://schema.org/Event"
    >
        <meta itemprop="name" content={title} />
        <meta itemprop="description" content={description} />
        <meta itemprop="image" content={image} />
        <meta itemprop="startDate" content={date} />
        <meta itemprop="location" content={place} />
        <meta itemprop="eventAttendanceMode" content={modality === "Virtual" ? "OnlineEventAttendanceMode" : "OfflineEventAttendanceMode"} />

        <div class="flex items-center gap-2" aria-label="Fecha del evento">
            <svg
                class="w-4 h-4"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
                aria-hidden="true"
            >
                <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"
                >
                </path>
            </svg>
            <time datetime={date} itemprop="startDate">
                {formattedDate}
            </time>
        </div>

        <div class="flex items-center gap-2" aria-label="Ubicación del evento">
            <svg
                class="w-4 h-4"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
                aria-hidden="true"
            >
                <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"
                >
                </path>
                <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"
                >
                </path>
            </svg>
            <span itemprop="location">{place}</span>
        </div>

        <div class="flex items-center gap-2" aria-label="Número de asistentes">
            <svg
                class="w-4 h-4"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
                aria-hidden="true"
            >
                <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"
                >
                </path>
            </svg>
            <span>{attendees} asistentes</span>
        </div>

        <a 
            href={`/event/${id}`} 
            class="details-button"
            aria-label={`Ver más detalles sobre ${title}`}
        >
            Ver detalles
        </a>
    </div>
</CardBase>

<style>
    .details-button {
        display: inline-block;
        margin-top: 1rem;
        padding: 0.5rem 1rem;
        background-color: #2563eb;
        color: white;
        text-decoration: none;
        border-radius: 6px;
        transition: background-color 0.2s;
    }

    .details-button:hover {
        background-color: #1d4ed8;
    }
</style>
